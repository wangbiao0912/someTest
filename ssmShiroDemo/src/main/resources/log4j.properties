##log4j.rootLogger=debug,Console,ZVING,info
##log4j.rootLogger=debug,Console
##
###stdout阈值  和 debug 实质是一样的  阈值=调试
##log4j.appender.Console=org.apache.log4j.ConsoleAppender
##log4j.appender.Console.Target=System.out
##log4j.appender.Console.layout=org.apache.log4j.PatternLayout
##log4j.appender.Console.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH\:mm\:ss,SSS}][%c]%m%n
#
##
##log4j.appender.ZVING=org.apache.log4j.DailyRollingFileAppender
#
##log4j.appender.ZVING.DatePattern='_'yyyyMMdd'.log'
##log4j.appender.ZVING.Threshold=INFO
##log4j.appender.ZVING.layout=org.apache.log4j.PatternLayout
##log4j.appender.ZVING.layout.ConversionPattern=%p: %d{yy-MM-dd HH:mm:ss} %m%n
##
##
##log4j.logger.com.opensymphony.xwork2.ognl.OgnlValueStack=ERROR
#



log4j.rootLogger=debug,FILE,CONSOLE
#优先级从高到低分别是ERROR、WARN、INFO、DEBUG
#这里推荐选择二种，分别为ERROR:仅仅只记录错误名和位置；DEBUG：记录所有错误的详细信息
#在生产配置下，请关闭应用于控制台CONSOLE选项，仅启用FILE及可
log4j.addivity.org.apache=true

# 应用于控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=DEBUG
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Encoding=UTF-8
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern==[%p][%d{yyyy-MM-dd HH\:mm\:ss,SSS}][%c]%m%n

#应用于文件

#1.org.apache.log4j.ConsoleAppender （控制台），
#　　        2.org.apache.log4j.FileAppender （文件），
#　　        3.org.apache.log4j.DailyRollingFileAppender （每天产生一个日志文件），
#　　        4.org.apache.log4j.RollingFileAppender （文件大小到达指定尺寸的时候产生一个    新的文件）
#　　        5.org.apache.log4j.WriterAppender （将日志信息以流格式发送到任意指定的地方）

#log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.FILE=org.apache.log4j.RollingFileAppender
log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender
log4j.appender.FILE.MaxFileSize=1MB
# 输出的文件目录
#不能添加这个   这个会直接在上个文件打印*****************
log4j.appender.FILE.Append=true
log4j.appender.FILE.MaxBackupIndex=8
log4j.appender.FILE.Encoding=GBK
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.ConversionPattern=%d [%t] %-5p %c(line-%L) %-4r %x - %m%n
#log4j.appender.FILE.DatePattern=yyyy-MM-dd-HH-mm'.log'
log4j.appender.FILE.DatePattern = '.'yyyy-MM-dd'.txt'
log4j.appender.FILE.File=C:\\logs\\ssm.log
log4j.appender.FILE.layout.ConversionPattern=%d [%t] %-5p %c %x - %m%n

#############################

#
#log4j.appender.A4=org.apache.log4j.DailyRollingFileAppender
##log4j.appender.A4.File=log/log.txt
#log4j.appender.A4.File=C:\\logs\\ssm.log
#log4j.appender.A4.DatePattern=yyyy-MM-dd'.log'
#log4j.appender.A4.MaxFileSize=5000000
#log4j.appender.A4.encoding=gb2312
#log4j.appender.A4.layout=org.apache.log4j.PatternLayout
#log4j.appender.A4.layout.ConversionPattern==[%d{ISO8601}] %-5p %-x %X{user} %n     %m%n






#-------------------------------------------------可以使用---------------

#
#
##定义LOG输出级别
#log4j.rootLogger=INFO,Console,File
##定义日志输出目的地为控制台
#log4j.appender.Console=org.apache.log4j.ConsoleAppender
#log4j.appender.Console.Target=System.out
##可以灵活地指定日志输出格式，下面一行是指定具体的格式
#log4j.appender.Console.layout = org.apache.log4j.PatternLayout
#log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n
#
##文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.File = org.apache.log4j.RollingFileAppender
##指定输出目录
##log4j.appender.File.File =./logs/ssm.log
#log4j.appender.File.File =C:\\logs\\ssm.log
#
##定义文件最大大小
#log4j.appender.File.MaxFileSize = 10MB
## 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
#log4j.appender.File.Threshold = ALL
#log4j.appender.File.layout = org.apache.log4j.PatternLayout
#log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n